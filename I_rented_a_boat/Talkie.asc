// new module script

int _AnimDelay;
int _TalkieSignalLoop;
int _PreviousStatic;
AudioChannel* acNoise;

int _static_1_clip_pos;
int _static_2_clip_pos;
int _static_3_clip_pos;

int _talkie_rest_pos_x;
int _talkie_rest_pos_y;
int _talkie_actv_pos_x;
int _talkie_actv_pos_y;

bool _was_left_btn_down;
bool _talkie_is_raised;

bool _IsValidDialog(int talkie_pos_x, int talkie_pos_y, Hotspot* hspot)
{
  if(_TalkieSignalLoop == 3)
  {
    if(hspot != null && hspot.Enabled)
    {
      if(hspot.IsInteractionAvailable(eModeTalkto))
      {
        hspot.RunInteraction(eModeTalkto);
      }
      else if(hspot.IsInteractionAvailable(eModeLookat))
      {
        hspot.RunInteraction(eModeLookat);
      }      
    }
  }
  
  if(!bool_in_dialog && hspot != null && hspot.Enabled && hspot.ID < 20)
  {
    if(hspot.IsInteractionAvailable(eModeInteract))
    {
      hspot.RunInteraction(eModeInteract);
    }
  }
}

void game_start()
{
  _talkie_actv_pos_x = 272;
  _talkie_actv_pos_y = 220;
  
  _talkie_rest_pos_x = 279;
  _talkie_rest_pos_y = 239;
  cTalkie.x = _talkie_rest_pos_x;
  cTalkie.y = _talkie_rest_pos_y;
  cTalkie_inter.x = _talkie_rest_pos_x;
  cTalkie_inter.y = _talkie_rest_pos_y-93;
  
  gActionBar.Visible = false;    
  gActionBar.Transparency = 100;
}

void ChangeAudio(int static_level)
{
  if(static_level == _PreviousStatic) return;
  
  if(acNoise != null && static_level == 0) acNoise.Stop();
    
  if(acNoise != null) {
    switch(_PreviousStatic)
    {
      case 1:
        _static_1_clip_pos = acNoise.Position;
        break;
      case 2:
        _static_2_clip_pos = acNoise.Position;    
        break;
      case 3:
        _static_3_clip_pos = acNoise.Position;    
        break;
    }
  }
  
  int static_level_to_play;
  // we invert static in other maps to avoid sound pollution
  if(Player_Map != 0) static_level_to_play = 4 - static_level;
  else static_level_to_play = static_level;
  
  switch(static_level_to_play)
  {
    case 1:
      acNoise = aTalkie_static_1.PlayFrom(eAudioPriorityNormal, eRepeat);
      break;
    case 2:
      acNoise = aTalkie_static_2.PlayFrom(eAudioPriorityNormal, eRepeat);    
      break;
    case 3:
      acNoise = aTalkie_static_3.PlayFrom(eAudioPriorityNormal, eRepeat);    
      break;
  }
  
  if(Player_Map != 0 && acNoise.IsPlaying) acNoise.Volume = 20;
  else if(acNoise.IsPlaying) acNoise.Volume = 90;
  
  _PreviousStatic = static_level;
}

bool _was_talkie_is_raised;
void _UpdateActionBar(int talkie_pos_x, int talkie_pos_y, Hotspot* hspot)
{
  if(!_was_talkie_is_raised && _talkie_is_raised)
  {
    label_actionbar.Text = "";
    gActionBar.Visible = true;
    gActionBar.StopTweenTransparency(eFinishTween);
    gActionBar.TweenTransparency(0.1, 0, eEaseLinearTween, eNoBlockTween);
  }
  if(_was_talkie_is_raised && !_talkie_is_raised)
  {
    gActionBar.StopTweenTransparency(eFinishTween);
    gActionBar.TweenTransparency(0.1, 100, eEaseLinearTween, eNoBlockTween);
  }
  
  if(_talkie_is_raised)
  {
    label_actionbar.Text = "";
    if(hspot != null && hspot.Enabled && !String.IsNullOrEmpty(hspot.GetTextProperty("aName")))
    {
      label_actionbar.Text = hspot.GetTextProperty("aName");
    }
  } 
  
  _was_talkie_is_raised = _talkie_is_raised;
}

bool _RaiseTalkie()
{
  bool leftbtn = mouse.IsButtonDown(eMouseLeft);
  bool btn_clicked = !_was_left_btn_down && leftbtn;
  bool btn_released = _was_left_btn_down && !leftbtn;
  
  bool rightbtn = mouse.IsButtonDown(eMouseRight);
  
  if(btn_clicked) {
    _talkie_is_raised = true;
    cTalkie.StopTweenPosition(eFinishTween);
    cTalkie_inter.StopTweenPosition(eFinishTween);
    cTalkie.TweenPosition(0.066666, _talkie_actv_pos_x, _talkie_actv_pos_y, eEaseInBackTween, eNoBlockTween);  
    cTalkie_inter.TweenPosition(0.066666, _talkie_actv_pos_x, _talkie_actv_pos_y-93, eEaseInBackTween, eNoBlockTween);    
  }
  
  bool do_release = btn_released;
  if(rightbtn) {
    do_release = true;
    btn_released = false;
  }
  
  if(do_release) {
    _talkie_is_raised = false;
    cTalkie.StopTweenPosition(eFinishTween);
    cTalkie_inter.StopTweenPosition(eFinishTween);
    cTalkie.TweenPosition(0.1, _talkie_rest_pos_x, _talkie_rest_pos_y, eEaseInBackTween, eNoBlockTween); 
    cTalkie_inter.TweenPosition(0.1, _talkie_rest_pos_x, _talkie_rest_pos_y-93, eEaseInBackTween, eNoBlockTween);       
  }
  _was_left_btn_down = leftbtn;
  return btn_released;
}


void Talkie_Update()
{
  
  // let's adjust the color of the talkie so it's a bit prettier
  int player_x = FloatToInt(Player_Pos.x); 
  int player_y = FloatToInt(Player_Pos.y);
  int talkie_pos_x = player_x - FloatToInt(Maths.Sin(Player_Angle)*6.0);
  int talkie_pos_y = player_y - FloatToInt(Maths.Cos(Player_Angle)*6.0); 
  int radio_map_idx = map[Player_Map].XYtoIDX(talkie_pos_x, talkie_pos_y);
  int color =  map[Player_Map].Colormap[radio_map_idx];
  int col_r = GetColorRed(color);
  int col_g = GetColorGreen(color);
  int col_b = GetColorBlue(color);
    
  cTalkie.Tint(col_r, col_g, col_b, 40, 100*(col_r+col_g+col_b)/(3*256));
  
  bool just_released = _RaiseTalkie();
  
  //adjust signal
  Hotspot* hspot = Hotspot.GetAtRoomXY(talkie_pos_x, talkie_pos_y);
  if(hspot.ID < 4) _TalkieSignalLoop = hspot.ID;
  if(hspot.ID < 20 && !bool_in_dialog) _UpdateActionBar(talkie_pos_x, talkie_pos_y, hspot);
  if((hspot.ID >= 4 && hspot.ID < 20) && hspot.Enabled || bool_in_dialog)
  {
    cTalkie_inter.Transparency = ClampLoopI(cTalkie_inter.Transparency+5, 0, 100);
  }
  else 
  {
    cTalkie_inter.Transparency = 100;
  }
  if(just_released && !bool_in_dialog) _IsValidDialog(talkie_pos_x, talkie_pos_y, hspot);
  
  if(!bool_in_dialog) ChangeAudio(_TalkieSignalLoop);
  
  // Do not animate if player didn't walk
  if(!Player_Walked) {
    cTalkie.LockViewFrame(VIEW_TALKIE_MOVE_CH4, _TalkieSignalLoop, cTalkie.Frame, eStopMoving); 
    cTalkie_inter.LockViewFrame(VIEW_TALKIE_INTER, _TalkieSignalLoop, cTalkie_inter.Frame, eStopMoving); 
    return;
  }    
  
  _AnimDelay++;
  if(Player_Running) _AnimDelay++; // lower delay when running
  
  if(_AnimDelay >= 5) {
    cTalkie.LockViewFrame(VIEW_TALKIE_MOVE_CH4, _TalkieSignalLoop, ClampLoopI((cTalkie.Frame + 1), 0, 9), eStopMoving); 
    cTalkie_inter.LockViewFrame(VIEW_TALKIE_INTER, _TalkieSignalLoop, ClampLoopI((cTalkie_inter.Frame + 1), 0, 9), eStopMoving); 
    _AnimDelay = 0;
  }
}