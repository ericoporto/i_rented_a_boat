// new module script
void ActionKeys::Update() 
{
  if(this.BlockInput) 
  {
    this.Forward = false;
    this.Left = false;
    this.Backward = false;
    this.Right = false;
  
    this.Run = false;
    this.Flashlight = false;
    return;
  }
  
  this.Forward = IsKeyPressed(eKeyUpArrow)    || IsKeyPressed(eKeyW);
  this.Left = IsKeyPressed(eKeyLeftArrow)     || IsKeyPressed(eKeyA);
  this.Backward = IsKeyPressed(eKeyDownArrow) || IsKeyPressed(eKeyS);
  this.Right = IsKeyPressed(eKeyRightArrow)   || IsKeyPressed(eKeyD);
  
  this.Run = (IsKeyPressed(eKeyAgs_LeftShift)  || IsKeyPressed(eKeyAgs_RightShift)) ^ System.CapsLock;
  this.Flashlight  = IsKeyPressed(eKeyAgs_LeftCtrl) || IsKeyPressed(eKeyAgs_RightCtrl);
}

// space is used to skip dialogs

ActionKeys actionKeys;

void repeatedly_execute_always()
{
  actionKeys.Update();  
}

export actionKeys;