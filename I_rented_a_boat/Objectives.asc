// new module script
struct ObjectiveData {
  String Description;
  bool IsActive;
  bool IsComplete;
};

ObjectiveData _objectives[eObjectiveCOUNT];

void _UpdateObjectiveText()
{
  bool at_least_one_objective;
  String objetive_text = "TO-DO list:\n";
  for (int i=1; i<eObjectiveCOUNT; i++) 
  {
    if(_objectives[i].IsActive && !String.IsNullOrEmpty(_objectives[i].Description))
    {
      at_least_one_objective = true;
      
      objetive_text = objetive_text.Append("- ");
      objetive_text = objetive_text.Append(_objectives[i].Description);
      objetive_text = objetive_text.Append("\n");
    }    
  }
  
  if(at_least_one_objective) { label_objective.Text = objetive_text; }
  else { label_objective.Text = "";}
}

static void Objective::SetCurrent(TargetObjective objective)
{
  _objectives[objective].IsActive = true;
  
  _UpdateObjectiveText();
}

static void Objective::Expire(TargetObjective objective)
{
  _objectives[objective].IsActive = false;
  
  _UpdateObjectiveText();
}

static void Objective::Complete(TargetObjective objective)
{
  _objectives[objective].IsActive = false;
  _objectives[objective].IsComplete = true;
  
  _UpdateObjectiveText();
}

void game_start() 
{
  _objectives[eObjective_FindFullSignalSpotNearLake].Description = "Find a spot with full signal near the lake and use the radio.";
  _objectives[eObjective_FindThePlaceYouFell].Description = "Walk through the cave and find the place you fell.";
  _objectives[eObjective_FindYourWayToTheBeach].Description = "Find your way to the beach through the cave.";
  _objectives[eObjective_FindLighthouseMountain].Description = "Reach the Lighthouse Mountain.";
  _objectives[eObjective_ReachLighthouseMountainTop].Description = "Hike to the peak of Lighthouse Mountain and radio Julie there."; 
}