// room script file
#define CLOUD_COUNT 64
float _distance;
float _scale_height;
DynamicSprite* _screen_spr;
DrawingSurface* _screen_surf;
Vec3* _Ballon_Pos;

struct CloudData {
  Character* Char;
  Vec3* Pos;
  ScreenPoint* Sp;
};
CloudData _cloud[CLOUD_COUNT];

void _CloudSwap(int i, int k)
{
  Vec3* tmp_v3p = _cloud[i].Pos;
  ScreenPoint* tmp_sp = _cloud[i].Sp;
  Character* tmp_c = _cloud[i].Char;
  
  _cloud[i].Pos = _cloud[k].Pos;
  _cloud[i].Sp = _cloud[k].Sp;
  _cloud[i].Char = _cloud[k].Char;
  
  _cloud[k].Pos = tmp_v3p;
  _cloud[k].Sp = tmp_sp;
  _cloud[k].Char = tmp_c;
}

void _Cloud_BubbleSortZ()
{
  for(int i=0; i<CLOUD_COUNT-1; i++)
  {
    for(int j=0; j<CLOUD_COUNT-i-1; i++)
    {
      if(_cloud[j].Sp.z < _cloud[j+1].Sp.z)
      {
        _CloudSwap(i, j);
      }
    }    
  }  
}

void _Cloud_SetVisual(int i)
{
  _cloud[i].Char.ChangeView(VIEW_CLOUD_1 + Random(7));
}

void _Cloud_Spawn(int i)
{
  float z = _distance+IntToFloat(Random(96));
  float sinphi = Maths.Sin(Player_Angle);
  float cosphi = Maths.Cos(Player_Angle);

  float plx =  -cosphi * z - sinphi * z;
  float ply =   sinphi * z - cosphi * z;
  float prx =   cosphi * z - sinphi * z;
  float pry =  -sinphi * z - cosphi * z;
  
  float dx = (prx - plx) / ScreenWidth_AsFloat;
  float dy = (pry - ply) / ScreenWidth_AsFloat;
  
  float f_rnd = IntToFloat(Random(ScreenWidth));
  
  plx+=Player_Pos.x;
  ply+=Player_Pos.y;
  
  _cloud[i].Pos = Vec3.Create(plx+f_rnd*dx, ply+f_rnd*dy, Player_Pos.z-IntToFloat(Random(64))); 
  _Cloud_SetVisual(i);
}

void _Cloud_SpawnAtBoot(int i)
{
  _cloud[i].Pos = Vec3.Create(128.0-IntToFloat(Random(256 )), _distance*IntToFloat(Random(100))/100.0, Player_Pos.z-IntToFloat(Random(64)));
  _Cloud_SetVisual(i);
}

void _UpdateClouds()
{
  for(int i=0; i<CLOUD_COUNT; i++)
  {
    if(_cloud[i].Char.Transparency == 100) {
      _Cloud_Spawn(i);
    }
  }
  
  for(int i=0; i<CLOUD_COUNT; i++)
  {
    _cloud[i].Sp = CharacterProjectionAdjust(_cloud[i].Char, _scale_height,  _cloud[i].Pos);
    if(_cloud[i].Char.Transparency != 100) {
      int scale = ClampI(FloatToInt(_cloud[i].Sp.w*16.0), 5, 200);
      _cloud[i].Char.Scaling = scale;
      _cloud[i].Char.Transparency = ClampI((100-scale*scale), 0, 100);
    }
  }
  
 // _Cloud_BubbleSortZ();
  
  
  for(int i=0; i<CLOUD_COUNT; i++)
  {
    _cloud[i].Char.Baseline = 0; //  i + 3; // we are not using bubblesortz
  }
}

void _UpdateBalloon()
{
  float sinf = Maths.Sin(Maths.Pi*IntToFloat((Frame%512))/256.0);
  float camdist = 64.0 + 4.0*sinf;
  _Ballon_Pos.x = Player_Pos.x - Maths.Sin(Player_Angle)*camdist;
  _Ballon_Pos.y = Player_Pos.y - Maths.Cos(Player_Angle)*camdist;
  _Ballon_Pos.z = Player_Pos.z -32.0+ 8.0*sinf;
  
  ScreenPoint* sp = CharacterProjectionAdjust(cBalloon, _scale_height, _Ballon_Pos);
  cBalloon.Scaling = ClampI(FloatToInt(sp.w*32.0), 5, 200);
}

void _UpdatePlayerPos()
{
  float player_speed = 1.5;

  //Player_Angle += IntToFloat(ScreenWidth_Half - mouse.x)/60.0;
  //if(Frame_Odd) mouse.SetPosition(ScreenWidth_Half, ScreenHeight_Half);
  Player_Angle = Maths.Pi/4.0 + Maths.Sin(Maths.Pi*IntToFloat((Frame%1024))/512.0);
  Player_Angle = NormalizeAngle(Player_Angle); // keeps the angle between -Pi and +Pi
  
  Player_Pos.x = Player_Pos.x - Maths.Sin(Player_Angle)*player_speed;
  Player_Pos.y = Player_Pos.y - Maths.Cos(Player_Angle)*player_speed;
 // Player_Pos.y = Player_Pos.y + 1.0;  
 
}

void _Update()
{
  _UpdatePlayerPos(); 
  _UpdateBalloon();
  _UpdateClouds(); 
}

String _GetAttribution()
{
  String atrb = "";
  
  atrb = atrb.Append("Sound Effects assets from\n\n");
  atrb = atrb.Append("Blender Foundation\n");
  atrb = atrb.Append("PremiumBeat.com\n");
  atrb = atrb.Append("MrAuralization\n");
  atrb = atrb.Append("digifishmusic\n");
  atrb = atrb.Append("artisticdude\n");
  
  atrb = atrb.Append("\n\n\n\n");
  
  atrb = atrb.Append("Ambient Music assets from\n\n");
  atrb = atrb.Append("audiactiva\n");
  atrb = atrb.Append("Jonathan Shaw\n");
  atrb = atrb.Append("karinalarasart\n");
  atrb = atrb.Append("kyles\n");
  atrb = atrb.Append("Zixem\n");
  atrb = atrb.Append("glueIsobar\n");
  
  atrb = atrb.Append("\n\n\n\n");
  
  atrb = atrb.Append("Graphic assets from\n\n");
  atrb = atrb.Append("Michael Stöter\n");
  atrb = atrb.Append("Abdullah Ghatasheh\n");
  atrb = atrb.Append("Noah\n");
  atrb = atrb.Append("Ansimuz\n");
  
  atrb = atrb.Append("\n\n\n\n");
  
  atrb = atrb.Append("with Script Modules\n\n");
  atrb = atrb.Append("Timer - Crimson Wizard\n");
  atrb = atrb.Append("Tween - Edmundito\n");
  
  atrb = atrb.Append("\n\n\n\n");
  
  atrb = atrb.Append("Ending Theme by\n\n");
  atrb = atrb.Append("Tad Miller\n");
  
  
  atrb = atrb.Append("\n\n\n\n");
  
  atrb = atrb.Append("made in Adventure Game Studio\n\n");
  
  atrb = atrb.Append("\n\n\n\n\n\n");
  
  atrb = atrb.Append("Thank You for Playing!\n\n");
  
  atrb = atrb.Append("\n\n\n\n");
  
  return atrb;
}




void repeatedly_execute_always()
{
  _Update();
  
  _screen_surf = _screen_spr.GetDrawingSurface();
  RenderSeaOnly(_screen_surf, Player_Pos, Player_Angle, Player_Horizon, _scale_height, _distance, 16.0);
  _screen_surf.Release();
}

function room_AfterFadeIn()
{
 // RestartGame();
  cBalloon.Animate(0, 2, eRepeat, eNoBlock, eForwards);
  obj_dust.SetView(VIEW_DUST, 0, 0);
  obj_dust.Animate(0, 1, eRepeat, eNoBlock, eForwards);
  obj_dust.Transparency = 85;
  CustomTransition_FadeIn(5.0, eBlockTween);
  Wait(SecondsToLoops(4.0));
  gCredits_1.Transparency = 100;
  gCredits_1.Visible = true;
  
  label_credits_1.Text = "created by Érico Porto";
  gCredits_1.TweenTransparency(1.0, 0, eEaseLinearTween, eBlockTween);
  Wait(SecondsToLoops(2.0));
  gCredits_1.TweenTransparency(1.0, 100, eEaseLinearTween, eBlockTween);
  Wait(SecondsToLoops(2.0));
    
  label_credits_1.Text = "''I rented a boat'' made for MAGS\nmarch 2021\ntheme: Journey";
  gCredits_1.TweenTransparency(1.0, 0, eEaseLinearTween, eBlockTween);
  Wait(SecondsToLoops(3.0));
  gCredits_1.TweenTransparency(1.0, 100, eEaseLinearTween, eBlockTween);
  Wait(SecondsToLoops(2.0));
  
  gCredits_1.Visible = false;
  
  credits2_label.Text = _GetAttribution();
  credits2_label.Y = 360;
  int final_h = GetTextHeight(credits2_label.Text, credits2_label.Font, 320);
  final_h = final_h + 360;
  credits2_label.Height = final_h;
  
  gCredits_2.Transparency = 100;
  gCredits_2.Visible = true;
  
  gCredits_2.TweenTransparency(1.0, 40, eEaseLinearTween, eBlockTween);
  credits2_label.TweenY(32.0, -final_h, eEaseLinearTween, eBlockTween);
 // gCredits_2.TweenTransparency(1.0, 100, eEaseLinearTween, eBlockTween);
  //gCredits_2.Visible = false;
  
  credits2_label.Text = " ";
  
  CustomTransition_FadeOut(8.0, eBlockTween);
  gCredits_2.Visible = false;
  Wait(1);
  RestartGame();  
}

function room_RepExec()
{

}

function room_Load()
{
  Sound_MusicPlay(aEnding);
  CustomTransition_IntantFadeOut();
  cBalloon.ChangeRoom(36);
  _Ballon_Pos = Vec3.Create(0.0, 0.0, 0.0);
  _screen_spr = DynamicSprite.Create(ScreenWidth, ScreenHeight, true);
  obj_screen.Graphic = _screen_spr.Graphic;

  _scale_height = 64.0;
  _distance = 128.0;
  _cloud[0].Char = cCloud01;
  _cloud[1].Char = cCloud02;
  _cloud[2].Char = cCloud03;
  _cloud[3].Char = cCloud04;
  _cloud[4].Char = cCloud05;
  _cloud[5].Char = cCloud06;
  _cloud[6].Char = cCloud07;
  _cloud[7].Char = cCloud08;
  _cloud[8].Char = cCloud09;
  _cloud[9].Char = cCloud10;
  _cloud[10].Char = cCloud11;
  _cloud[11].Char = cCloud12;
  _cloud[12].Char = cCloud13;
  _cloud[13].Char = cCloud14;
  _cloud[14].Char = cCloud15;
  _cloud[15].Char = cCloud16;
  _cloud[16].Char = cCloud17;
  _cloud[17].Char = cCloud18;
  _cloud[18].Char = cCloud19;
  _cloud[19].Char = cCloud20;
  _cloud[20].Char = cCloud21;
  _cloud[21].Char = cCloud22;
  _cloud[22].Char = cCloud23;
  _cloud[23].Char = cCloud24;
  _cloud[24].Char = cCloud25;
  _cloud[25].Char = cCloud26;
  _cloud[26].Char = cCloud27;
  _cloud[27].Char = cCloud28;
  _cloud[28].Char = cCloud29;
  _cloud[29].Char = cCloud30;
  _cloud[30].Char = cCloud31;
  _cloud[31].Char = cCloud32;
  _cloud[32].Char = cCloud33;
  _cloud[33].Char = cCloud34;
  _cloud[34].Char = cCloud35;
  _cloud[35].Char = cCloud36;
  _cloud[36].Char = cCloud37;
  _cloud[37].Char = cCloud38;
  _cloud[38].Char = cCloud39;
  _cloud[39].Char = cCloud40;
  _cloud[40].Char = cCloud41;
  _cloud[41].Char = cCloud42;
  _cloud[42].Char = cCloud43;
  _cloud[43].Char = cCloud44;
  _cloud[44].Char = cCloud45;
  _cloud[45].Char = cCloud46;
  _cloud[46].Char = cCloud47;
  _cloud[47].Char = cCloud48;
  _cloud[48].Char = cCloud49;
  _cloud[49].Char = cCloud50;
  _cloud[50].Char = cCloud51;
  _cloud[51].Char = cCloud52;
  _cloud[52].Char = cCloud53;
  _cloud[53].Char = cCloud54;
  _cloud[54].Char = cCloud55;
  _cloud[55].Char = cCloud56;
  _cloud[56].Char = cCloud57;
  _cloud[57].Char = cCloud58;
  _cloud[58].Char = cCloud59;
  _cloud[59].Char = cCloud60;
  _cloud[60].Char = cCloud61;
  _cloud[61].Char = cCloud62;
  _cloud[62].Char = cCloud63;
  _cloud[63].Char = cCloud64;
  Player_Horizon = 90.0;
  Player_Pos.Set(256.0, 64.0, 64.0);
  
  Player_Angle = Maths.Pi/4.0; //0.0; //Maths.Pi/2.0;
  for(int i=0; i<CLOUD_COUNT; i++){
     _cloud[i].Char.ChangeRoom(36);
    _Cloud_Spawn(i);
  }
  
  Screen.AutoSizeViewportOnRoomLoad = false;
  Game.Camera.SetAt(0, 0);
  Game.Camera.SetSize(ScreenWidth, ScreenHeight);
  Screen.Viewport.SetPosition(0, 0, Screen.Width, Screen.Height);
  
  for(int i=0; i<128; i++)
  {
    _Update();
  }
}
