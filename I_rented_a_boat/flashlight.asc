// new module script


int _flahslight__pos_x;
int _flahslight__pos_y;

int _flahslight_rest_pos_x;
int _flahslight_rest_pos_y;
int _flahslight_actv_pos_x;
int _flahslight_actv_pos_y;

bool _flahslight_is_raised;
bool _was_flash_btn_down;
Object* _flashlight_obj;

int _flashlight_y_frames[10];
int _flashlight_frame;
int _AnimDelay;

bool _is_not_in_cave;
float _flashlight_delta_y;

void game_start()
{
  _flahslight_actv_pos_x = 6;
  _flahslight_actv_pos_y = 302;
  
  _flahslight_rest_pos_x = -4;
  _flahslight_rest_pos_y = 349;
  
  _flashlight_y_frames[0] = 0;
  _flashlight_y_frames[1] = -1;
  _flashlight_y_frames[2] = -2;
  _flashlight_y_frames[3] = -1;
  _flashlight_y_frames[4] = 0;
  _flashlight_y_frames[5] = 1;
  _flashlight_y_frames[6] = 1;
  _flashlight_y_frames[7] = 2;
  _flashlight_y_frames[8] = 1;
  _flashlight_y_frames[9] = 0;
  
  _flahslight__pos_x = _flahslight_rest_pos_x;
  _flahslight__pos_y = _flahslight_rest_pos_y;
  _flashlight_delta_y = IntToFloat(_flahslight_rest_pos_y - _flahslight_actv_pos_y);
}

void _InstantRaise()
{
  _flahslight__pos_x = _flahslight_actv_pos_x;
  _flahslight__pos_y = _flahslight_actv_pos_y;
  _flahslight_is_raised = true;
}

bool _RaiseFlashlight()
{
  bool flashbtn = actionKeys.Flashlight;
  bool btn_clicked = !_was_flash_btn_down && flashbtn;
    
  if(btn_clicked && _flahslight_is_raised) {
    _flahslight_is_raised = false;
    _flashlight_obj.StopTweenPosition(eFinishTween);
    _flashlight_obj.TweenPosition(0.2, _flahslight_rest_pos_x, _flahslight_rest_pos_y, eEaseInBackTween, eNoBlockTween);       
    _flahslight__pos_x = _flahslight_rest_pos_x;
    _flahslight__pos_y = _flahslight_rest_pos_y;
    _AnimDelay = -8;
  }
  else if(btn_clicked && !_flahslight_is_raised) {
    _flahslight_is_raised = true;
    _flashlight_obj.StopTweenPosition(eFinishTween);
    _flashlight_obj.TweenPosition(0.4, _flahslight_actv_pos_x, _flahslight_actv_pos_y, eEaseInBackTween, eNoBlockTween);  
    _flahslight__pos_x = _flahslight_actv_pos_x;
    _flahslight__pos_y = _flahslight_actv_pos_y;
    _AnimDelay = -8;
  }
  
  _was_flash_btn_down = flashbtn;
  return btn_clicked;
}

void Flashlight_Update()
{
  if(_is_not_in_cave) return;
  
  _RaiseFlashlight();
  
  if(!Player_Walked) return;
  
    _AnimDelay++;
  if(Player_Running) _AnimDelay++; // lower delay when running
  
  if(_AnimDelay >= 5) {
    _flashlight_frame = ClampLoopI((_flashlight_frame + 1), 0, 9);
    _flashlight_obj.Y = _flashlight_y_frames[_flashlight_frame] + _flahslight__pos_y;
    _AnimDelay = 0;
  }
}

void Flashlight_SetObject(Object* flashlight_obj)
{
  _flashlight_obj = flashlight_obj;
  _flashlight_obj.X = _flahslight__pos_x;
  _flashlight_obj.Y = _flahslight__pos_y;
}

float GetFlashLightRaised()
{
  return IntToFloat(_flahslight_rest_pos_y-_flashlight_obj.Y)/_flashlight_delta_y;
}

void on_event (EventType event, int data)
{
  switch(event) {
    // called just before the room's 'Player Enters Room' event occurs
    case eEventEnterRoomBeforeFadein: // data = new room number
      if(data>0 && data<=MAX_MAPS) {
        int this_room = data;
        int this_map = this_room - 1;
        _is_not_in_cave = !map[this_map].IsCave;
        _InstantRaise();
      }
    break;
    
    // called just after the room's 'Player Leaves Room' event occurs
    case eEventLeaveRoom: //  data = room number they are leaving
    break;
  }
}